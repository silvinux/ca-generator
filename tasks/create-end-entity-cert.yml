---
- name: "[End-Entity] | Generate Private key"
  openssl_privatekey:
    path: "{{ ca_endentity_dir }}/private/{{ item.key }}.key"
    size: "{{ ca_endentity_size |default('2048') }}"
  loop: "{{ lookup('dict', endentity_list, wantlist=True) }}"

- name: "[End-Entity] | Generate CSR"
  openssl_csr:
    path: "{{ ca_endentity_dir }}/csr/{{ item.key }}.csr"
    privatekey_path: "{{ ca_endentity_dir }}/private/{{ item.key }}.key"
    country_name: "{{ ca_subject_country }}"
    state_or_province_name: "{{ ca_subject_state_province }}"
    locality_name: "{{ ca_locality_name | default(omit) }}"
    organization_name: "{{ ca_organization_name }}"
    organizational_unit_name: "{{ ca_organizational_unit_name }}"
    common_name: "{{ item.value.endentity_common_name }}"
    email_address: "{{ item.value.endentity_email | default(omit) }}"
    subject_alt_name: "{{ item.value.dns_server | map('regex_replace', '^', 'DNS:') | list }}"
    key_usage: "{{ end_entity_cert__key_usage }}"
  loop: "{{ lookup('dict', endentity_list, wantlist=True) }}"

- name: "[End-Entity] | Generate end-entity certificate signed with your own CA certificate"
  openssl_certificate:
   csr_path: "{{ ca_endentity_dir }}/csr/{{ item.key }}.csr"
   path: "{{ ca_endentity_dir }}/certs/{{ item.key }}.pem"
   privatekey_path: "{{ ca_endentity_dir }}/private/{{ item.key }}.key"


   provider: ownca
   ownca_create_subject_key_identifier: always_create
   ownca_path: "{{ ca_intermediate_dir }}/certs/{{ ca_intermediate_file_name }}.pem"
   ownca_privatekey_path: "{{ ca_intermediate_dir }}/private/{{ ca_intermediate_file_name }}.key"

  loop: "{{ lookup('dict', endentity_list, wantlist=True) }}"
